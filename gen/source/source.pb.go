// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: source/source.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchingSourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     uint64                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Link          string                 `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchingSourceRequest) Reset() {
	*x = MatchingSourceRequest{}
	mi := &file_source_source_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingSourceRequest) ProtoMessage() {}

func (x *MatchingSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_source_source_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingSourceRequest.ProtoReflect.Descriptor instead.
func (*MatchingSourceRequest) Descriptor() ([]byte, []int) {
	return file_source_source_proto_rawDescGZIP(), []int{0}
}

func (x *MatchingSourceRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *MatchingSourceRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MatchingSourceRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type MatchingSourceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LinkSourceId  uint64                 `protobuf:"varint,2,opt,name=link_source_id,json=linkSourceId,proto3" json:"link_source_id,omitempty"`
	Link          string                 `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Proceed       bool                   `protobuf:"varint,4,opt,name=proceed,proto3" json:"proceed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchingSourceResponse) Reset() {
	*x = MatchingSourceResponse{}
	mi := &file_source_source_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingSourceResponse) ProtoMessage() {}

func (x *MatchingSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_source_source_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingSourceResponse.ProtoReflect.Descriptor instead.
func (*MatchingSourceResponse) Descriptor() ([]byte, []int) {
	return file_source_source_proto_rawDescGZIP(), []int{1}
}

func (x *MatchingSourceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MatchingSourceResponse) GetLinkSourceId() uint64 {
	if x != nil {
		return x.LinkSourceId
	}
	return 0
}

func (x *MatchingSourceResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *MatchingSourceResponse) GetProceed() bool {
	if x != nil {
		return x.Proceed
	}
	return false
}

var File_source_source_proto protoreflect.FileDescriptor

const file_source_source_proto_rawDesc = "" +
	"\n" +
	"\x13source/source.proto\x12\tsource.v1\"^\n" +
	"\x15MatchingSourceRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\x04R\tcompanyId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x12\n" +
	"\x04link\x18\x03 \x01(\tR\x04link\"\x80\x01\n" +
	"\x16MatchingSourceResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\x0elink_source_id\x18\x02 \x01(\x04R\flinkSourceId\x12\x12\n" +
	"\x04link\x18\x03 \x01(\tR\x04link\x12\x18\n" +
	"\aproceed\x18\x04 \x01(\bR\aproceed2k\n" +
	"\rSourceService\x12Z\n" +
	"\x13FindMatchingOrOther\x12 .source.v1.MatchingSourceRequest\x1a!.source.v1.MatchingSourceResponseB2Z0github.com/roboricindustries/raycon-proto/gen;pbb\x06proto3"

var (
	file_source_source_proto_rawDescOnce sync.Once
	file_source_source_proto_rawDescData []byte
)

func file_source_source_proto_rawDescGZIP() []byte {
	file_source_source_proto_rawDescOnce.Do(func() {
		file_source_source_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_source_source_proto_rawDesc), len(file_source_source_proto_rawDesc)))
	})
	return file_source_source_proto_rawDescData
}

var file_source_source_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_source_source_proto_goTypes = []any{
	(*MatchingSourceRequest)(nil),  // 0: source.v1.MatchingSourceRequest
	(*MatchingSourceResponse)(nil), // 1: source.v1.MatchingSourceResponse
}
var file_source_source_proto_depIdxs = []int32{
	0, // 0: source.v1.SourceService.FindMatchingOrOther:input_type -> source.v1.MatchingSourceRequest
	1, // 1: source.v1.SourceService.FindMatchingOrOther:output_type -> source.v1.MatchingSourceResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_source_source_proto_init() }
func file_source_source_proto_init() {
	if File_source_source_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_source_source_proto_rawDesc), len(file_source_source_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_source_source_proto_goTypes,
		DependencyIndexes: file_source_source_proto_depIdxs,
		MessageInfos:      file_source_source_proto_msgTypes,
	}.Build()
	File_source_source_proto = out.File
	file_source_source_proto_goTypes = nil
	file_source_source_proto_depIdxs = nil
}
