// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: instance/instance.proto

package pb

import (
	v1 "github.com/roboricindustries/raycon-proto/gen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- Request selectors (per-channel lookup keys)
type WhatsAppGreenApiSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId uint64 `protobuf:"varint,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"` // required for chat CPs
}

func (x *WhatsAppGreenApiSelector) Reset() {
	*x = WhatsAppGreenApiSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhatsAppGreenApiSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatsAppGreenApiSelector) ProtoMessage() {}

func (x *WhatsAppGreenApiSelector) ProtoReflect() protoreflect.Message {
	mi := &file_instance_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatsAppGreenApiSelector.ProtoReflect.Descriptor instead.
func (*WhatsAppGreenApiSelector) Descriptor() ([]byte, []int) {
	return file_instance_instance_proto_rawDescGZIP(), []int{0}
}

func (x *WhatsAppGreenApiSelector) GetConfigId() uint64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

// --- Request
type GetChannelConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId uint64     `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Channel   v1.Channel `protobuf:"varint,2,opt,name=channel,proto3,enum=common.v1.Channel" json:"channel,omitempty"`
	// Channel-specific lookup keys (exactly one must be set)
	//
	// Types that are assignable to Selector:
	//
	//	*GetChannelConfigRequest_WhatsappGreenapi
	Selector isGetChannelConfigRequest_Selector `protobuf_oneof:"selector"`
}

func (x *GetChannelConfigRequest) Reset() {
	*x = GetChannelConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelConfigRequest) ProtoMessage() {}

func (x *GetChannelConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelConfigRequest.ProtoReflect.Descriptor instead.
func (*GetChannelConfigRequest) Descriptor() ([]byte, []int) {
	return file_instance_instance_proto_rawDescGZIP(), []int{1}
}

func (x *GetChannelConfigRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetChannelConfigRequest) GetChannel() v1.Channel {
	if x != nil {
		return x.Channel
	}
	return v1.Channel(0)
}

func (m *GetChannelConfigRequest) GetSelector() isGetChannelConfigRequest_Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (x *GetChannelConfigRequest) GetWhatsappGreenapi() *WhatsAppGreenApiSelector {
	if x, ok := x.GetSelector().(*GetChannelConfigRequest_WhatsappGreenapi); ok {
		return x.WhatsappGreenapi
	}
	return nil
}

type isGetChannelConfigRequest_Selector interface {
	isGetChannelConfigRequest_Selector()
}

type GetChannelConfigRequest_WhatsappGreenapi struct {
	WhatsappGreenapi *WhatsAppGreenApiSelector `protobuf:"bytes,10,opt,name=whatsapp_greenapi,json=whatsappGreenapi,proto3,oneof"`
}

func (*GetChannelConfigRequest_WhatsappGreenapi) isGetChannelConfigRequest_Selector() {}

// --- Response configs
type WhatsAppGreenApiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId           uint64 `protobuf:"varint,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`                                // echo back for correlation
	ProviderInstanceId string `protobuf:"bytes,2,opt,name=provider_instance_id,json=providerInstanceId,proto3" json:"provider_instance_id,omitempty"` // Green-API instance id from provider
	ApiKey             string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`                                       // Green-API key used in API requests
}

func (x *WhatsAppGreenApiConfig) Reset() {
	*x = WhatsAppGreenApiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhatsAppGreenApiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatsAppGreenApiConfig) ProtoMessage() {}

func (x *WhatsAppGreenApiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_instance_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatsAppGreenApiConfig.ProtoReflect.Descriptor instead.
func (*WhatsAppGreenApiConfig) Descriptor() ([]byte, []int) {
	return file_instance_instance_proto_rawDescGZIP(), []int{2}
}

func (x *WhatsAppGreenApiConfig) GetConfigId() uint64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *WhatsAppGreenApiConfig) GetProviderInstanceId() string {
	if x != nil {
		return x.ProviderInstanceId
	}
	return ""
}

func (x *WhatsAppGreenApiConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type ChannelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel v1.Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=common.v1.Channel" json:"channel,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ChannelConfig_Whatsapp
	Value isChannelConfig_Value `protobuf_oneof:"value"`
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instance_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_instance_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_instance_instance_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelConfig) GetChannel() v1.Channel {
	if x != nil {
		return x.Channel
	}
	return v1.Channel(0)
}

func (m *ChannelConfig) GetValue() isChannelConfig_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ChannelConfig) GetWhatsapp() *WhatsAppGreenApiConfig {
	if x, ok := x.GetValue().(*ChannelConfig_Whatsapp); ok {
		return x.Whatsapp
	}
	return nil
}

type isChannelConfig_Value interface {
	isChannelConfig_Value()
}

type ChannelConfig_Whatsapp struct {
	Whatsapp *WhatsAppGreenApiConfig `protobuf:"bytes,10,opt,name=whatsapp,proto3,oneof"`
}

func (*ChannelConfig_Whatsapp) isChannelConfig_Value() {}

var File_instance_instance_proto protoreflect.FileDescriptor

var file_instance_instance_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x37, 0x0a, 0x18, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70, 0x70, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x54, 0x0a, 0x11, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x5f, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x61, 0x74,
	0x73, 0x41, 0x70, 0x70, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x10, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x42, 0x0a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70,
	0x70, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x08, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x61, 0x70, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x61, 0x74, 0x73, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x08, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x32, 0x6c, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x24, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x6f, 0x62, 0x6f, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x2f, 0x72, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_instance_instance_proto_rawDescOnce sync.Once
	file_instance_instance_proto_rawDescData = file_instance_instance_proto_rawDesc
)

func file_instance_instance_proto_rawDescGZIP() []byte {
	file_instance_instance_proto_rawDescOnce.Do(func() {
		file_instance_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_instance_instance_proto_rawDescData)
	})
	return file_instance_instance_proto_rawDescData
}

var file_instance_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_instance_instance_proto_goTypes = []interface{}{
	(*WhatsAppGreenApiSelector)(nil), // 0: instance.v1.WhatsAppGreenApiSelector
	(*GetChannelConfigRequest)(nil),  // 1: instance.v1.GetChannelConfigRequest
	(*WhatsAppGreenApiConfig)(nil),   // 2: instance.v1.WhatsAppGreenApiConfig
	(*ChannelConfig)(nil),            // 3: instance.v1.ChannelConfig
	(v1.Channel)(0),                  // 4: common.v1.Channel
}
var file_instance_instance_proto_depIdxs = []int32{
	4, // 0: instance.v1.GetChannelConfigRequest.channel:type_name -> common.v1.Channel
	0, // 1: instance.v1.GetChannelConfigRequest.whatsapp_greenapi:type_name -> instance.v1.WhatsAppGreenApiSelector
	4, // 2: instance.v1.ChannelConfig.channel:type_name -> common.v1.Channel
	2, // 3: instance.v1.ChannelConfig.whatsapp:type_name -> instance.v1.WhatsAppGreenApiConfig
	1, // 4: instance.v1.ChannelConfigService.GetChannelConfig:input_type -> instance.v1.GetChannelConfigRequest
	3, // 5: instance.v1.ChannelConfigService.GetChannelConfig:output_type -> instance.v1.ChannelConfig
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_instance_instance_proto_init() }
func file_instance_instance_proto_init() {
	if File_instance_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_instance_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhatsAppGreenApiSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhatsAppGreenApiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instance_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_instance_instance_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetChannelConfigRequest_WhatsappGreenapi)(nil),
	}
	file_instance_instance_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ChannelConfig_Whatsapp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instance_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instance_instance_proto_goTypes,
		DependencyIndexes: file_instance_instance_proto_depIdxs,
		MessageInfos:      file_instance_instance_proto_msgTypes,
	}.Build()
	File_instance_instance_proto = out.File
	file_instance_instance_proto_rawDesc = nil
	file_instance_instance_proto_goTypes = nil
	file_instance_instance_proto_depIdxs = nil
}
