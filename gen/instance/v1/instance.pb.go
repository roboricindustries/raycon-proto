// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: instance/v1/instance.proto

package instancev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- Request selectors (per-channel lookup keys)
type WhatsAppGreenApiSelector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      uint64                 `protobuf:"varint,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"` // required for chat CPs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhatsAppGreenApiSelector) Reset() {
	*x = WhatsAppGreenApiSelector{}
	mi := &file_instance_v1_instance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhatsAppGreenApiSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatsAppGreenApiSelector) ProtoMessage() {}

func (x *WhatsAppGreenApiSelector) ProtoReflect() protoreflect.Message {
	mi := &file_instance_v1_instance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatsAppGreenApiSelector.ProtoReflect.Descriptor instead.
func (*WhatsAppGreenApiSelector) Descriptor() ([]byte, []int) {
	return file_instance_v1_instance_proto_rawDescGZIP(), []int{0}
}

func (x *WhatsAppGreenApiSelector) GetConfigId() uint64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

// --- Request
type GetChannelConfigRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CompanyId uint64                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// Channel-specific lookup keys (exactly one must be set)
	//
	// Types that are valid to be assigned to Selector:
	//
	//	*GetChannelConfigRequest_WhatsappGreenapi
	Selector      isGetChannelConfigRequest_Selector `protobuf_oneof:"selector"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelConfigRequest) Reset() {
	*x = GetChannelConfigRequest{}
	mi := &file_instance_v1_instance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelConfigRequest) ProtoMessage() {}

func (x *GetChannelConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instance_v1_instance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelConfigRequest.ProtoReflect.Descriptor instead.
func (*GetChannelConfigRequest) Descriptor() ([]byte, []int) {
	return file_instance_v1_instance_proto_rawDescGZIP(), []int{1}
}

func (x *GetChannelConfigRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetChannelConfigRequest) GetSelector() isGetChannelConfigRequest_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *GetChannelConfigRequest) GetWhatsappGreenapi() *WhatsAppGreenApiSelector {
	if x != nil {
		if x, ok := x.Selector.(*GetChannelConfigRequest_WhatsappGreenapi); ok {
			return x.WhatsappGreenapi
		}
	}
	return nil
}

type isGetChannelConfigRequest_Selector interface {
	isGetChannelConfigRequest_Selector()
}

type GetChannelConfigRequest_WhatsappGreenapi struct {
	WhatsappGreenapi *WhatsAppGreenApiSelector `protobuf:"bytes,10,opt,name=whatsapp_greenapi,json=whatsappGreenapi,proto3,oneof"`
}

func (*GetChannelConfigRequest_WhatsappGreenapi) isGetChannelConfigRequest_Selector() {}

// --- Response configs
type WhatsAppGreenApiConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConfigId           uint64                 `protobuf:"varint,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`                                // echo back for correlation
	ProviderInstanceId string                 `protobuf:"bytes,2,opt,name=provider_instance_id,json=providerInstanceId,proto3" json:"provider_instance_id,omitempty"` // Green-API instance id from provider
	ApiKey             string                 `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`                                       // Green-API key used in API requests
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WhatsAppGreenApiConfig) Reset() {
	*x = WhatsAppGreenApiConfig{}
	mi := &file_instance_v1_instance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhatsAppGreenApiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatsAppGreenApiConfig) ProtoMessage() {}

func (x *WhatsAppGreenApiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_instance_v1_instance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatsAppGreenApiConfig.ProtoReflect.Descriptor instead.
func (*WhatsAppGreenApiConfig) Descriptor() ([]byte, []int) {
	return file_instance_v1_instance_proto_rawDescGZIP(), []int{2}
}

func (x *WhatsAppGreenApiConfig) GetConfigId() uint64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *WhatsAppGreenApiConfig) GetProviderInstanceId() string {
	if x != nil {
		return x.ProviderInstanceId
	}
	return ""
}

func (x *WhatsAppGreenApiConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type ChannelConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*ChannelConfig_WhatsappGreenapi
	Value         isChannelConfig_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	mi := &file_instance_v1_instance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_instance_v1_instance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_instance_v1_instance_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelConfig) GetValue() isChannelConfig_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ChannelConfig) GetWhatsappGreenapi() *WhatsAppGreenApiConfig {
	if x != nil {
		if x, ok := x.Value.(*ChannelConfig_WhatsappGreenapi); ok {
			return x.WhatsappGreenapi
		}
	}
	return nil
}

type isChannelConfig_Value interface {
	isChannelConfig_Value()
}

type ChannelConfig_WhatsappGreenapi struct {
	WhatsappGreenapi *WhatsAppGreenApiConfig `protobuf:"bytes,10,opt,name=whatsapp_greenapi,json=whatsappGreenapi,proto3,oneof"`
}

func (*ChannelConfig_WhatsappGreenapi) isChannelConfig_Value() {}

var File_instance_v1_instance_proto protoreflect.FileDescriptor

const file_instance_v1_instance_proto_rawDesc = "" +
	"\n" +
	"\x1ainstance/v1/instance.proto\x12\vinstance.v1\"7\n" +
	"\x18WhatsAppGreenApiSelector\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\x04R\bconfigId\"\x9a\x01\n" +
	"\x17GetChannelConfigRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\x04R\tcompanyId\x12T\n" +
	"\x11whatsapp_greenapi\x18\n" +
	" \x01(\v2%.instance.v1.WhatsAppGreenApiSelectorH\x00R\x10whatsappGreenapiB\n" +
	"\n" +
	"\bselector\"\x80\x01\n" +
	"\x16WhatsAppGreenApiConfig\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\x04R\bconfigId\x120\n" +
	"\x14provider_instance_id\x18\x02 \x01(\tR\x12providerInstanceId\x12\x17\n" +
	"\aapi_key\x18\x03 \x01(\tR\x06apiKey\"l\n" +
	"\rChannelConfig\x12R\n" +
	"\x11whatsapp_greenapi\x18\n" +
	" \x01(\v2#.instance.v1.WhatsAppGreenApiConfigH\x00R\x10whatsappGreenapiB\a\n" +
	"\x05value2l\n" +
	"\x14ChannelConfigService\x12T\n" +
	"\x10GetChannelConfig\x12$.instance.v1.GetChannelConfigRequest\x1a\x1a.instance.v1.ChannelConfigBBZ@github.com/roboricindustries/raycon-proto/instance/v1;instancev1b\x06proto3"

var (
	file_instance_v1_instance_proto_rawDescOnce sync.Once
	file_instance_v1_instance_proto_rawDescData []byte
)

func file_instance_v1_instance_proto_rawDescGZIP() []byte {
	file_instance_v1_instance_proto_rawDescOnce.Do(func() {
		file_instance_v1_instance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_instance_v1_instance_proto_rawDesc), len(file_instance_v1_instance_proto_rawDesc)))
	})
	return file_instance_v1_instance_proto_rawDescData
}

var file_instance_v1_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_instance_v1_instance_proto_goTypes = []any{
	(*WhatsAppGreenApiSelector)(nil), // 0: instance.v1.WhatsAppGreenApiSelector
	(*GetChannelConfigRequest)(nil),  // 1: instance.v1.GetChannelConfigRequest
	(*WhatsAppGreenApiConfig)(nil),   // 2: instance.v1.WhatsAppGreenApiConfig
	(*ChannelConfig)(nil),            // 3: instance.v1.ChannelConfig
}
var file_instance_v1_instance_proto_depIdxs = []int32{
	0, // 0: instance.v1.GetChannelConfigRequest.whatsapp_greenapi:type_name -> instance.v1.WhatsAppGreenApiSelector
	2, // 1: instance.v1.ChannelConfig.whatsapp_greenapi:type_name -> instance.v1.WhatsAppGreenApiConfig
	1, // 2: instance.v1.ChannelConfigService.GetChannelConfig:input_type -> instance.v1.GetChannelConfigRequest
	3, // 3: instance.v1.ChannelConfigService.GetChannelConfig:output_type -> instance.v1.ChannelConfig
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_instance_v1_instance_proto_init() }
func file_instance_v1_instance_proto_init() {
	if File_instance_v1_instance_proto != nil {
		return
	}
	file_instance_v1_instance_proto_msgTypes[1].OneofWrappers = []any{
		(*GetChannelConfigRequest_WhatsappGreenapi)(nil),
	}
	file_instance_v1_instance_proto_msgTypes[3].OneofWrappers = []any{
		(*ChannelConfig_WhatsappGreenapi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_instance_v1_instance_proto_rawDesc), len(file_instance_v1_instance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instance_v1_instance_proto_goTypes,
		DependencyIndexes: file_instance_v1_instance_proto_depIdxs,
		MessageInfos:      file_instance_v1_instance_proto_msgTypes,
	}.Build()
	File_instance_v1_instance_proto = out.File
	file_instance_v1_instance_proto_goTypes = nil
	file_instance_v1_instance_proto_depIdxs = nil
}
